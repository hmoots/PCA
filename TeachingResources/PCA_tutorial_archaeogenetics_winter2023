# A summary script for Archaeogenetics and the Human Past on February 23, 2023
# UNIX text processing overview and running PCA
# This file also contains new commands we discussed in class and commented descriptions 

# log onto the cluster using a secure shell (ssh)
ssh [Your_Cnet_ID]@midway2.rcc.uchicago.edu

# enter a SLURM (Simple Linux Utility for Resource Management) interactive session
# specify the account and reservation (computing resources dedicated to our class)

sinteractive -p broadwl --account=know20005 --reservation=know20005 --mem=4G 

# change directories (cd) to where we will be working
cd /project2/compbio/know20005/data

# view the contents of that directory
ls

# move up one directory 
cd ..

# look at the path to the working directory (e.g. where you are in the directory structure)
pwd

# make your own directory 
# example mkdir hmoots

mkdir [your_CNet_ID]

# change directories into your directory
cd [your_CNet_ID]

# we will be working with published human ancient DNA data that is curated in the AADR (Allen Ancient DNA Resource)
# Link to access AADR:
# https://reich.hms.harvard.edu/allen-ancient-dna-resource-aadr-downloadable-genotypes-present-day-and-ancient-dna-data

# Paper and citation for AADR
# Mallick, S., Micco, A., Mah, M. et al. The Allen Ancient DNA Resource (AADR) a curated compendium of ancient human genomes. Sci Data 11, 182 (2024). 
# https://doi.org/10.1038/s41597-024-03031-7

# you can download the files using ´wget´ and the link to the file from the above website
# for class we'll be using a shared copy that has already been downloaded

# we can search, filter and sort various columns in the .anno (age, tissue type, group ID) using bash commands

# for instance, the following command will let you get a unique list of population names from a specific country, in this case from Bulgaria:
grep Bulgaria v54.1_HO_public.tsv | cut -f12 | sort -k1,1 | uniq >> Bulgaria_pops.tsv 

# "grep" stands or "get regular expression" and returns all lines that contain Bulgaria in the .anno file
# "cut" allows you to print only column of the file you are working with, in this case the 12th collumn

#you can search for other key phrases as well
grep twin v54.1_HO_public.tsv | cut -f12 | sort -k1,1 | uniq | wc -l 
grep twin v54.1_HO_public.tsv | cut -f12 | sort -k1,1 | uniq > Twin_pops.tsv


# cut lets you subset your output to only a single column. By counting the header row (either visually in the terminal using `head -1 Bulgaria v54.1_HO_public.anno` or by viewing it in excel) we found out the population ID is in the 12th column. You can subset to any column you want.

#sort sorts whatever input you provide and you can specify if you wanted sorted numerically or alphabetically (see attached slides for details about these options)

# uniq removes all duplicates (as long as the file is sorted) and provides you a unique list

# the UNIX text processing powerpoint provides more info about how each command works, with details about the options

# creating a PCA plot
# 1. load modules
module load openblas

# 2. create a list of populations to keep for analysis from your larger data set
#if a file with this name already exists in your folder, but with different population names, 
#you can delete it by running `rm -rf populations.to.keep`

cat <<EOT>> populations.to.keep
Italy_Imperial.SG
Italy_Imperial_o1.SG
Italy_Imperial_o2.SG
Italy_Imperial_o3.SG
Italy_Imperial_o4.SG
Italy_Imperial_o5.SG
Italy_Imperial_oAfrica.SG
Italy_Imperial_oCentralEuropean.SG
EOT

#3. create a parameter file to extract the eigenstrat format subset for all samples of interest
#If this file already exists in your folder, you don't need to enter it again, you can use the one you already have

cat <<EOT>> parSubset
DIR: /project2/compbio/know20005/data

genotypename: DIR/v54.1_HO_public.geno
snpname:      DIR/v54.1_HO_public.snp
indivname:    DIR/v54.1_HO_public.ind
outputformat:    EIGENSTRAT
indivoutname: pca.ind
snpoutname: pca.snp
genotypeoutname: pca.geno
poplistname: populations.to.keep
numoutlieriter: 0
EOT

#4. subset to individuals in the populations listed in populations.to.keep
#this run a program that create files of just the population you specify, and this is the input to run PCA
/project2/compbio/know20005/bin/eigensoft-6.1.4/bin/convertf -p parSubset | tee mySubset.log 

#5. create a list of populations to use for pca analysis (e.g. your reference data set)
#if a file with this name already exists in your folder, but with different population names, 
#you can delete it by running `rm -rf populations.to.pca`

cat <<EOT>> populations.to.pca
Italy_Imperial.SG
Italy_Imperial_o1.SG
Italy_Imperial_o2.SG
Italy_Imperial_o3.SG
Italy_Imperial_o4.SG
Italy_Imperial_o5.SG
Italy_Imperial_oAfrica.SG
Italy_Imperial_oCentralEuropean.SG
EOT

#6. create a parameter file to run PCA
#If this file already exists in your folder, you don't need to enter it again, you can use the one you already have

cat <<EOT>> parSmartPCA
indivname: pca.ind
snpname: pca.snp
genotypename: pca.geno
evecoutname: trial.evec
evaloutname: trial.eval
altnormstyle: NO 
numoutevec: 10
familynames: YES
grmoutname: genetic_relatedness_matrix
maxpops: 100
killr2: YES
r2thresh: 0.1
lsqproject: YES
numoutlieriter: 0
poplistname: populations.as.reference
popsizelimit: 25
EOT

# run PCA on the subset individuals
/project2/compbio/know20005/bin/eigensoft-6.1.4/bin/smartpca -p parSmartPCA | tee myPCA.log

#download from cluster - run this in the directory where you want your file to end up
scp hmoots@midway2.rcc.uchicago.edu:/project2/compbio/know20005/users/eschaffer/trial.evec .

scp hmoots@midway2.rcc.uchicago.edu:/project2/compbio/know20005/data/mjrimmer/trial.evec .


scp hmoots@midway2.rcc.uchicago.edu:/project2/compbio/know20005/users/cisnerosi/trial.evec .

scp hmoots@midway2.rcc.uchicago.edu:/project2/jnovembre/alisar/analyses/feems/example_data/larger_dataset/AADR.v44.allCoords.added.anno AADR.v44.allCoords.added.anno.tsv



scp [your_CNET_ID]@midway2.rcc.uchicago.edu:/project2/compbio/know20005/users/[your_CNET_ID]/[your_file_name] .







